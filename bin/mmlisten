#!/usr/bin/env ruby

# This utility talks over a serial connection to a RileyLink that has been
# loaded with the subg_rfspy firmware (https://github.com/ps2/subg_rfspy)

# It asks the cc1110 to listen for packets, receives them, decodes, and prints them out.

# Must install the serialport gem to use this.

require 'minimed_rf'
require 'minimed_rf/rfspy'

if ARGV.length < 1
  puts "Usage: mmlisten /dev/tty.usbserial-A9048LGG [channel]"
  exit -1
end


channel = 0
if ARGV.length == 2
  channel = ARGV[1].to_i
end

puts "Opening #{ARGV[0]}"
rl = MinimedRF::RFSpy.new(ARGV[0])
rl.sync
rl.set_base_freq(916.630)
# wide rx filter
rl.update_register(MinimedRF::RFSpy::REG_MDMCFG4, 0x19)
rl.update_register(MinimedRF::RFSpy::REG_FREND1, 0xB6)

while 1
  packet = rl.get_packet(channel, 30 * 1000)
  if packet
    puts "#{Time.now.strftime('%H:%M:%S.%3N')} #{"%3d" % packet.rssi} (#{"%3d" % packet.sequence}): #{packet}"
    #puts "Raw: #{packet.hex_data}"
  else
    print "."
  end
end
